
manifest {
    homePage = 'https://github.com/icgc-argo-workflows/argo-modules'
    description = 'ARGO Generic Modules to be shared across workflows for RDPC processing'
    nextflowVersion = '>=22.10.0'
}

params {
    outdir = "output"
    publish_dir_mode = "copy"
    singularity_pull_docker_container = false
    test_data_base = 'tests/data/qa'

    // song/score setting 
    api_token                  = null
    api_download_token         = null
    api_upload_token           = null
    song_url                   = null
    score_url                  = null
    song_url_download          = null
    score_url_download         = null
    song_url_upload            = null
    score_url_upload           = null
    transport_parallel         = null
    transport_mem              = null
    song_container             = null
    song_container_version     = null
    score_container            = null
    score_container_version    = null

    // Max resource options
    // Defaults only, expecting to be overwritten
    max_memory                 = '6.GB'
    max_cpus                   = 2
    max_time                   = '2.h'
}

profiles {
  singularity {
    singularity.enabled    = true
    singularity.autoMounts = true
    docker.enabled         = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
    singularity.engineOptions = '-s'
  }
  docker {
    docker.enabled         = true
    docker.userEmulation   = true
    singularity.enabled    = false
    podman.enabled         = false
    shifter.enabled        = false
    charliecloud.enabled   = false
    docker.registry = 'quay.io'
    docker.runOptions = '-u \$(id -u):\$(id -g)'   
  }
  rdpc      { includeConfig 'rdpc.config'  }
  rdpc_qa  { includeConfig 'rdpc_qa.config'  }
  rdpc_dev { includeConfig 'rdpc_dev.config'  }
}

// Load modules.config for DSL2 module specific options
includeConfig 'modules.config'

// Load test_data.config containing paths to test data
includeConfig 'test_data.config'

// Enable locally defined binary scripts for modules
nextflow.enable.moduleBinaries = true
